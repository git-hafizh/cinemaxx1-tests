{"version":3,"sources":["components/LoadingIndicator.js","components/HomePage/Movie/AllUpcoming/AllUpcoming.js","Hooks/useFetchMovie.js"],"names":["LoadingIndicator","usePromiseTracker","promiseInProgress","style","width","height","display","justifyContent","alignItems","type","color","AllUpcoming","useState","page","setPage","React","movies","setMovies","useEffect","trackPromise","axios","get","apiKey","then","result","newMovies","data","results","catch","error","console","log","useFetchMovie","soon","className","map","item","to","id","src","poster_path","alt","title","name","Button","variant","onClick"],"mappings":"kRAIgB,SAASA,IAGvB,OAF8BC,8BAAtBC,mBAIJ,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,MACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UANhB,SASE,cAAC,IAAD,CAAQC,KAAK,YAAYC,MAAM,UAAUL,OAAO,MAAMD,MAAM,UCcrDO,UAzBK,WAAO,IAAD,EACAC,mBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,OCFX,SAAuBD,GAAO,IAAD,EACZE,IAAMH,SAAS,IADH,mBACjCI,EADiC,KACzBC,EADyB,KAgBxC,OAbAF,IAAMG,WAAU,WACZC,uBACIC,IAAMC,IAAN,sDAAyDC,IAAzD,gCAAuFT,IAAQU,MAAK,SAACC,GACjG,IAAMC,EAAYD,EAAOE,KAAKC,QAC9BV,EAAU,GAAD,mBAAKD,GAAL,YAAgBS,QAExBG,OAAM,SAACC,GACJC,QAAQC,IAAIF,SAIzB,CAAChB,IAEG,CAACG,EAAQC,GDZHe,CAAcnB,GAAtBoB,EAFiB,oBAIxB,OACE,gCACE,qBAAKC,UAAU,aAAf,SACE,mBAAGA,UAAU,iBAAb,wBAEF,qBAAKA,UAAU,YAAf,SACGD,EAAKE,KAAI,SAACC,GAAD,OACR,qBAAKF,UAAU,YAAf,SACE,eAAC,IAAD,CAAMG,GAAE,iBAAYD,EAAKE,IAAzB,UACE,qBAAKC,IAAG,0CAAqCH,EAAKI,aAAeC,IAAI,WACrE,mBAAGP,UAAU,aAAb,SAA2BE,EAAKM,MAAQN,EAAKM,MAAQN,EAAKO,WAH9BP,EAAKE,SAQzC,cAACtC,EAAD,IACA,cAAC4C,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMhC,EAAQD,EAAO,IAA1D","file":"static/js/4.bc040273.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\n\r\n export default function LoadingIndicator(){\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Loader type=\"ThreeDots\" color=\"#f6e58d\" height=\"100\" width=\"100\" />\r\n      </div>\r\n    )\r\n  );\r\n};","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './AllUpcoming.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport useFetchMovie from '../../../../Hooks/useFetchMovie';\r\nimport LoadingIndicator from '../../../LoadingIndicator';\r\n\r\nconst AllUpcoming = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [soon] = useFetchMovie(page);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-badge\">\r\n        <p className=\"upcoming-badge\">Upcoming</p>\r\n      </div>\r\n      <div className=\"soon-list\">\r\n        {soon.map((item) => (\r\n          <div className=\"soon-item\" key={item.id}>\r\n            <Link to={`/movie/${item.id}`}>\r\n              <img src={`https://image.tmdb.org/t/p/w200/${item.poster_path}`} alt=\"poster\" />\r\n              <p className=\"soon-title\">{item.title ? item.title : item.name}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <LoadingIndicator/>\r\n      <Button variant=\"secondary\" onClick={() => setPage(page + 1)}>Load More Movies</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllUpcoming\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { apiKey } from '../components/api';\r\n\r\nexport default function useFetchMovie(page) {\r\n    const [movies, setMovies] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        trackPromise(\r\n            axios.get(`https://api.themoviedb.org/3/movie/upcoming?${apiKey}&language=en-US&page=${page}`).then((result) => {\r\n                const newMovies = result.data.results;\r\n                setMovies([...movies, ...newMovies]);\r\n            })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n        )\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page])\r\n\r\n    return [movies, setMovies];\r\n}"],"sourceRoot":""}