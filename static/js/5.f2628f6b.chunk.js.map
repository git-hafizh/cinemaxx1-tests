{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","components/HomePage/Movie/DetailPage/DetailPage.js"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","DetailPage","useState","info","genre","companies","spoke","detail","setDetail","useEffect","detailMovie","movie_id","match","params","id","axios","get","apiKey","then","res","data","genres","production_companies","spoken_languages","console","log","Row","Col","md","src","poster_path","alt","colSpan","title","map","item","name","imdb_id","release_date","status","runtime","vote_average","index","href","overview"],"mappings":"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","file":"static/js/5.f2628f6b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Col, Row, Table } from 'react-bootstrap';\r\nimport Menubar from '../../Menubar/Menubar';\r\nimport \"./DetailPage.css\";\r\nimport { apiKey } from '../../../api';\r\nimport Header from '../../Header/Header';\r\n\r\nconst DetailPage = (props) => {\r\n    const [detail, setDetail] = useState({\r\n        info: [],\r\n        genre: [],\r\n        companies: [],\r\n        spoke: []\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        detailMovie();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const detailMovie = () => {\r\n        const movie_id = props.match.params.id;\r\n\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movie_id}?${apiKey}&language=en-US`)\r\n            .then((res) => {\r\n                setDetail({\r\n                    info: res.data,\r\n                    genre: res.data.genres,\r\n                    companies: res.data.production_companies,\r\n                    spoke: res.data.spoken_languages\r\n                })\r\n            })\r\n    }\r\n\r\n    console.log(detail.info)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"main-content\">\r\n                <Row>\r\n                    <Col md={4}>\r\n                        <img src={`https://image.tmdb.org/t/p/w300/${detail.info.poster_path}`} alt=\"poster\" />\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Table striped={false} borderless={true}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td colSpan={3}>\r\n                                        <h2>{detail.info.title}</h2>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Genre</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.genre.map((item) => (\r\n                                        <span key={item.id}> {item.name}, </span>\r\n                                    ))}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>IMDB ID</td>\r\n                                    <td>:</td>\r\n                                    <td>https://www.imdb.com/title/{detail.info.imdb_id}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Release Date</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.info.release_date}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Genre</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.companies.map((item) => (\r\n                                        <span key={item.id}> {item.name}, </span>\r\n                                    ))}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Status</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.info.status}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Runtime</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.info.runtime} minutes</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Vote Average</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.info.vote_average}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Spoken Languages</td>\r\n                                    <td>:</td>\r\n                                    <td>{detail.spoke.map((item, index) => (\r\n                                        <span key={index}> {item.name}, </span>\r\n                                    ))}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td colSpan={2}>\r\n                                        <div className=\"watch-trailer\">\r\n                                            <a href=\"#trailer\">Watch Trailer</a>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <p className=\"sinopsis\">Sinopsis</p>\r\n                        <p className=\"overview\">{detail.info.overview}</p>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailPage;"],"sourceRoot":""}